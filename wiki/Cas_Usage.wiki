#labels ANALYSE
=Cas d'usage et scénario d'utilisation=
==Etape 1 (base+analyse)==

 * Ouvrir un projet
  # Demander la liste des projets
  # Afficher la liste des projets
  # Sélectionner le projet
  # Attendre une action  de utilisateur
 
 * Ouvrir le programme
  # Démarrer l'interface et le modèle côté client
  
 * Créer un projet
  # Demander un nom de projet
  # Vérifier que ce nom n'existe pas
  # Le sauvegarder
 
 * Sauvegarder le projet
  # Envoyer les données au serveur puis les sauvegarder dans la BD
 
 * Remplir un champ
  # Copier le mot sélectionné par l'utilisateur
  # Ajouter le mot à la liste correspondante
 
==Etape 2 (cas d'usage+scénario d'utilisation)==
 * ouvrir mode cas d'usages & scénarios d'utilisations
  # demander les cas d'usages déjà enregistrés dans la BD
  # demander les scénarios d'utilisations déjà enregistrés dans la BD
  # afficher l'analyse implicite à gauche
  # afficher les cas d'usages & scénarios d'utilisations à droite 
  # afficher les cas d'usages présents ordonné par priorité
  # afficher les scénarios d'utilisations présents
  # permettre a l'utilisateur d'entrer des nouveaux cas d'usages ou scénarios d'utilisations 
  
 * entrée d'un nouveau cas d'usage
  # entrer le cas d'usage, 1 par ligne
  
 * assombrir les analyse
  # désactivé la ligne de l'analyse
 
 * placer la priorité des cas d'usages
  # écrire le chiffre de priorité à côté de chacun des cas d'usages
  # vérifier l'unicité des priorités
  # actualiser l'affichage (réordonner les cas)

 * entrer les étapes d'un scénario d'utilisation
  # entrer le scénario du cas d'usage
  # indiquer l'ordre de procédure (car le scénario peut avoir plusieurs étapes bien entendu)
  
 * enregistrer les cas d'usages & scénarios d'utilisations
  # envoyer a la BD 
   * les cas d'usages
   * les priorités
   * les analyses désactivées
   * les scénarios d'utilisations
   * leur ordres 

==Étape 3 (Dictionnaire de données + CRC)==
 * ouvrir le mode dictionnaire de données
  # demander les dictionnaires déjà enregistrés à la BD
  # afficher les scénarios d'utilisations à gauche
  # afficher le dictionnaire de données à droite 
  # permettre à l'utilisateur d'entrer des nouveaux éléments au dictionnaire 
  
 * entrer les éléments des dictionnaires (variables et les fonctions)
  #entrer chaque élément des listes de variables et fonctions, 1 par ligne
  
 * ouvrir le mode CRC
  # demander les CRC déjà enregistrés à la BD
  # afficher à gauche les dictionnaires de données et les cas/scénarios dans une "tabbed pane"
  # afficher les CRC à droite 
  # permettre à l'utilisateur d'entrer des nouveaux éléments dans les CRC 
  
 * entrer nom de classe, propriétaire, la "signature" de méthode
  # entrer chaque élément de CRC selon le format CRC
 
 * dérive du dictionnaire et des cas d'usage/scénario
  # comment ????? (résolue directement par l'équipe d'interface)
  
==Étape 4 (planning + sprint)==
  * ouvrir le mode planning
   [http://blue-star-project.googlecode.com/svn/wiki/planing.jpg]
   
  * permettre d'ajouter des tâches GÉNÉRALES à chaque sprint
   # ajouté une tache générale par ligne dans la case du sprint
   
  * avoir une vue générale de l'ensemble du projet (tout les sprint)
   # montrer tout les sprint un a coté de l'autre avec leurs tâches associées 
   
  * permettre d'ajouter les tâches détaillées à chacun des sprints
   # ajouter une tache détaillée par ligne dans la vue du sprint détaillé
   
  * avoir une checkbox pour montrer ce qui est fait dans la vue détaillée
   # passer au vert les tâches faites
   

  * ouvrir le mode scrum
   [http://blue-star-project.googlecode.com/svn/wiki/scrum.jpg]
   
  * permettre de crée un nouveau scrum en date d'aujourd'hui
   # créer un scrum avec tout les usagers du projet
   # mettre dans les tâches faites toutes les tâches qui étaient à faire dans le scrum précédent (précédé d'un ? pour demandé un vérification)
   # permettre à l'utilisateur de vérifier ce qui a été réellement fait, ce qui sera fait, et les problèmes
   
  * permettre de voir les anciens scrum par date
   # afficher l'ancien scrum
   
  * voir les scrum par usager
   # afficher le scrum de l'utilisateur sélectionné
   