Tout nos CRC serons contenu ici sous le format décris en classe:
<wiki:comment>

voici le format a suivre pour les CRC, ne vous occupé pas du HTML si sa vous mélange, vous n'Avez qu'a remplacé ce qui est entre [[ ]] (en effaçant les crochet)
<table border=1>
   <tr>
       <td width=60% width=70%>[[nom de la classe]]</td>
       <td rowspan=3> [[
                      * classe avec laquel elle interagit
                      * autre classe]]
       </td>
   </tr>
   <tr>
       <td align="right">[[proprio]]</td>
   </tr>
   <tr>
       <td>[[
           * action fais par la classe
           * autre action]]
       </td>
   </tr>
</table>

</wiki:comment>

=Modèle Client (Jonatan C)=

<table border=1 width=70%>
   <tr>
       <td width=60%> Projet </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * ControleurClient
                      * ControleurServeur
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
           * __init__(self)
           * projetSerialized serialize(self)
           * deserialize(self, serializedProject)
           * unicodize(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Analyse </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,parent)
           * listeAnaliseTuple getForDB()
           * addItem(self, nom, verbe, adjectif,handled=0)
           * unicodize(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> CasUsage </td>
       <td rowspan=3> 
                      * ModelServeur
                      * Projet
                      * CasUsageItem
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * CasUsage addCasUsage(nom,priorite=0)
            * serializedCasUsage serialize()
            * void deserialize(serializedCasUsage)
            * unicodize(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> CasUsageItem </td>
       <td rowspan=3> 
                      * CasUsage
                      * ScenarioUtilisation
                      * ModelServeur
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self,nom="",priorite=0)
            * unicodize(self)
            * serializedCasUsageItem serialize()
            * void deserialize(serializedCasUsageItem)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> EtapeScenarioUtilisation </td>
       <td rowspan=3> 
                      * CasUsage
                      * ScenarioUtilisation
                      * ModelServeur
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self,nom="",ordre=0)
            * unicodize(self)
            * serializedEtapeScenario serialize()
            * void deserialize(serializedEtapeScenario)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> ScenarioUtilisation </td>
       <td rowspan=3> 
                      * ModelServeur
                      * CasUsageItem
                      * EtapeScenarioUtilisation
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * ScenarioUtilisation addEtapeScenario(nom,ordre=0)
            * serializedScenarioUtilisation serialize()
            * refaireOrdreNumerique(self)
            * unicodize(self)
            * void deserialize(serializedScenarioUtilisation)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> DictDonne </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * updateDictionnaire(self,variables,fonctions)
            * unicodize(self)
            * serializedDictDonne serialize()
            * void deserialize(serializedDictDonne)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Crc </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serializedCrc serialize()
            * void deserialize(serializedCrc)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> LstCrc </td>
       <td rowspan=3> 
                      * Crc
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serializedCrc serialize()
            * void deserialize(serializedCrc)
            * addCrc(self,nom)
            * updateCrc(self,crc)
            * getClassName(self)
            * getClass(self,className)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> LstSprint </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * serializedLstSprint serialize()
            * void deserialize(serializedLstSprint)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Sprint </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serializedSprint serialize()
            * void deserialize(serializedSprint)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> LstSprint </td>
       <td rowspan=3> 
                      * Sprint
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serializedSprint serialize()
            * void deserialize(serializedSprint)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Scrum </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
                      * ScrumList
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serializedScrum serialize()
            * void deserialize(serializedTask)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> ScrumList </td>
       <td rowspan=3> 
                      * Scrum
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serializedScrum serialize()
            * void deserialize(serializedScrum)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Task </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
                      * TaskList
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serialize(self)
            * deserialize(self, serializedTask)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> TaskList </td>
       <td rowspan=3> 
                      * Task
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serialize(self)
            * deserialize(self, sertasklist)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> User </td>
       <td rowspan=3> 
                      * ModelClient
                      * ModelServeur
                      * Projet
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C.</td>
   </tr>
   <tr>
       <td>
            * __init__(self)
            * unicodize(self)
            * serialize(self)
            * deserialize(self, serializedUser)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> ModelClient </td>
       <td rowspan=3> 
                      * Projet
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Jonatan C</td>
   </tr>
   <tr>
       <td>
           * void creerProjet(String nom)
       </td>
   </tr>
</table>



=Interface Graphique (Pascal L & Jean-Philippe C)=

<table border=1 width=70%>
   <tr>
       <td width=60%> Dictionnaire de donnée </td>
       <td rowspan=3>
                      * Vue
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right"> Jonathan H </td>
   </tr>
   <tr>
       <td>
           * Intialise mes deux frames secondaires de données et actions
           * updateListes(self) // va chercher l'info de mes tableaux
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Données </td>
       <td rowspan=3>
                      * Dictionnaire de donnée
       </td>
   </tr>
   <tr>
       <td align="right"> Jonathan H </td>
   </tr>
   <tr>
       <td>
           * initDonnee(self)
           * addRow(self)
           * gestion(self)
           * addEntry(self)
           * deleteRow(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Actions </td>
       <td rowspan=3>
                      * Dictionnaire de donnée
       </td>
   </tr>
   <tr>
       <td align="right"> Jonathan H </td>
   </tr>
   <tr>
       <td>
           * initActions(self)
           * addRow(self)
           * gestion(self)
           * addEntry(self)
           * deleteRow(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> AnalyseTextuelle </td>
       <td rowspan=3> 
                      * Vue
                      * Analyse
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,vueParent,analyse,implicite=False,explicite=False)
           * updateAnalyse(self)
           * addRow(self)
           * gestion(self)
           * deleteRow(self)           
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> CasUsageVue </td>
       <td rowspan=3> 
                      * Vue
                      * CasUsage
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Mathieu L.</td>
   </tr>
   <tr>
       <td>
           * monter(self)
           * descendre(self)
           * renommer(self)
           * ajouter(self)
           * supprimer(self)
           * remplirListe(self)
           * updateScenarioAssocie(self,evt=None)
           * updateCasUsage(self)           
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> CRCVue </td>
       <td rowspan=3> 
                      * Vue
                      * Crc
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L. && Jean-Philippe C.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,vueParent,listeDeCRC)
           * nouveauCrc(self)
           * getCrc(self,evt)
           * afficherRoles(self)
           * afficherCollabo(self)
           * updateCRC(self)
           * addRow(self)
           * gestion(self)
           * deleteRow(self)       
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> ListeProjets </td>
       <td rowspan=3> 
                      * Vue
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,data,parent)
           * choisirProjet(self)    
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Liste </td>
       <td rowspan=3> 
                      * Vue
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,parent,data=[],width=20,height=1)
           * fillListe(self,data)
           * getData(self,evt=0)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Mandat </td>
       <td rowspan=3> 
                      * Vue
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,vueParent,mandat)
           * updateMandat(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> ScenarioVue </td>
       <td rowspan=3> 
                      * Vue
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Mathieu L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,vueParent)
           * monter(self)
           * descendre(self)
           * renommer(self)
           * ajouter(self)
           * supprimer(self)
           * remplirListe(self, evt = None)
           * updateCasUsage(self)
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Vue </td>
       <td rowspan=3> 
                      * AnalyseTextuelle
                      * CasUsageVue
                      * CRCVue
                      * DictionnaireDonnee
                      * Liste
                      * Mandat
                      * ScenarioVue
                      * ControleurClient
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,parent)
           * menuPrincipal(self)
           * OuvrirProjet(self)
           * chargerEnMemoireProjet(self)
           * NouveauProjet(self)
           * effacerFenetre(self)
           * fermerProjet(self)
           * save(self)
           * afficherFenMandat(self)
           * afficherLesAnalyses(self)
           * afficherCasUsage(self)
           * afficherScenario(self)
           * afficherDictionnaire(self)
           * afficherCRC(self)
           * afficherUnMessage(self,Texte,erreur="ERREUR!!!")
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> Onglets </td>
       <td rowspan=3> 
                      * Vue
       </td>
   </tr>
   <tr>
       <td align="right">Pascal L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self,vueParent)
       </td>
   </tr>
</table>

=Controleur Client (Mathieu L)=

<table border=1 width=70%>
   <tr>
       <td width=60%> ControleurClient </td>
       <td rowspan=3> 
                      * ModelClient
                      * ControleurServeur
                      * Vue
                      * AnalyseTextuelle
                      * CasUsageVue
                      * CRCVue
                      * DictionnaireDonnee
                      * Liste
                      * Mandat
                      * ScenarioVue
                      * Vue
                      * Analyse (côté modèle)
                      * CasUsage (côté modèle)
                      * Crc (côté modèle)
                      * DictDonnee (côté modèle)
                      * Planning (côté modèle)
                      * Projet (côté modèle)
                      * ScenarionUtilisation (côté modèle)
                      * Scrum (côté modèle)
                      * Sprint (côté modèle)
                      * User (côté modèle)
       </td>
   </tr>
   <tr>
       <td align="right">Mathieu L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self)
           * connecter(self)
           * afficherInterface(self)
           * quitter(self)
           * getListeProjets(self)
           * ouvrirProjet(self, projetId)
           * creerProjet(self, nom)
           * sauvegarder(self)
           * creerMandat(self, mandat)
           * ouvrirMandat(self)
           * creerATImplicite(self, dictATImplicite)
           * ouvrirATImplicite(self)
           * creerATExplicite(self, dictATExplicite)
           * ouvrirATExplicite(self)
           * ouvrirScenario(self, strCasUsage = "")
           * monterEtapeScenario(self,indexAMonter)
           * descendreEtapeScenario(self,indexADescendre)
           * supprimerEtapsScenario(self,indexASupprimer)
           * renommerEtapsScenario(self,indexARenommer,nouveauNom)
           * ajouterEtapeScenario(self,nomNouveau)
           * getCurrentNomCasUsage(self)
           * getCurrentCasUsage(self)
           * ouvrirCasUsages(self)
           * monterPrioriteCas(self,nomCas)
           * descendrePrioriteCas(self,nomCas)
           * renommerCasUsage(self,ancienNom,nouveauNom)
           * supprimerCasUsage(self,nomSuppression)
           * ajouterCasUsage(self,nomNouveau)
           * ouvrirDicDonneeVar(self)
           * ouvrirDicDonneeFonc(self)
           * updateDictionnaireDonnee(self, variables, fonctions)
           * createNewCrc(self,nom)
           * updateCrc(self,crc)
           * getListeCRC(self)
           * getCRC(self,nom)
           * createNewUser(self,nom)           
       </td>
   </tr>
</table>

=Serveur (Jonathan H)=

<table border=1 width=70%>
   <tr>
       <td width=60%> ControleurServeur </td>
       <td rowspan=3>
                      * ControleurClient
                      * ModeleServeur
       </td>
   </tr>
   <tr>
       <td align="right"> Jonathan H </td>
   </tr>
   <tr>
       <td>
           * Initialisation du serveur
       </td>
   </tr>
</table>

<table border=1 width=70%>
   <tr>
       <td width=60%> ServerMethods </td>
       <td rowspan=3>
                      * ControleurServeur
       </td>
   </tr>
   <tr>
       <td align="right"> Jonathan H </td>
   </tr>
   <tr>
       <td>
           * getListeProjets() // retourne une liste de string
           * sauvegarderProjet(self, serializedProjet)) // save le projet dans la db
           * getProjet(self, idProjet) // retourne un projet
           * deleteProjet(self, idProjet) // supprime un projet
       </td>
   </tr>
</table>

=Modèle Serveur (François L)=
<table border=1 width=70%>
   <tr>
       <td width=60%> ModeleServeur </td>
       <td rowspan=3> 
                      * Projet
                      * ControleurServeur
       </td>
   </tr>
   <tr>
       <td align="right">François L.</td>
   </tr>
   <tr>
       <td>
           * __init__(self)
           * initDB(self)
           * getProject(self, projectID)
           * getListeProjet(self)
           * saveProject(self, projet)
           * saveNewProject(self, projet)
           * updateProject(self, projet)
           * deleteProject(self, projetID)
           * getNewIDProj(self)
           * getNewIDCasUsages(self)
           * getNewIDUsager(self)
           * getNewIDCRC(self)
           * test(self) //méthodes de tests interne a la classe
       </td>
   </tr>
</table>